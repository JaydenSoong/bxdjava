作用：集合存储的元素为对象。

特点：集合的长度(size)是可变的。

Collection 接口中的共性功能：
    1.添加。
      boolean add(Object o)   一次添加一个
      boolean addAll(Collection c)  将指定容器中的所有元素添加

    2.删除
      void clear()  将集合中的所有元素清除
      boolean remove(Object o)  将集合中的指定元素删除
      boolean removeAll(Collection c)   将容器中包含的集合c的所有元素删除

    3.获取长度
      int size()

    4.判断
      boolean isEmpty() 判断是否为空
      boolean contains(Object o)    判断是否包含某个对象
      boolean containsAll(Collection c) 判断是否包含某个集合的所有对象

    5.将集合转成数组
      Object[] toArray(Collection c)

    6.取出集合元素
      Iterator iterator()   Returns an iterator over the elements in this collection.
      取出集合集合中元素上迭代功能的迭代器对象。
      迭代：取出元素的一种方式。
      迭代器：具备迭代功能的对象。
      迭代器对象不需要 new. 直接通过iterator()方法即可获取。
      迭代器是取出Collection集合中的元素的公共方法。

----------------------------------------------------------------------------------------
Collection
    |---- List: 有序（存入的顺序和取出的顺序一致）。有索引，允许重复元素。
    |---- Set: 不允许重复元素。

重点：List接口中的特有方法：它的特有方法都是围绕索引定义的。

支持增、删、改、查
增：void add(int index, Object o)

删：E remove(int index)

改：E set(int index, Object o)

查：int indexOf(Object o)
    E get(int index)

-----------------------------------------------------------------------------------------
List 集合的具体子类。
    |---- Vector: 数据结构是数组，数组是可变长度的（不断 new 新数组，并将原数组元素复制到新数组）。是线程同步的，增删和查询都慢。
    |---- ArrayList: 也是数组结构，也是长度可变的。是线程不同步的，替代了 Vector。增删速度不快，查询速度快。
    |---- LinkedList: 链表结构，是线程不同步的。增删速度很快，查询速度较慢。

------------------------------------------------------------------------------------------
Set集合：不允许重复元素，和Collection的方法相同。Set集合取出元素的方法只有一个：迭代器。
    |---- HashSet：不保证存入和取出顺序一致；比数组查询效率高。当哈希算法算出的两个元素相同时，称为哈希冲突。
            如何保证唯一性？
            元素必须覆盖hashCode和equals方法
            覆盖hashCode方法是为了根据元素自身的特点确定哈希值。
            覆盖equals方法，是为了解决哈希值的冲突。
    |---- TreeSet：二叉树数据结构。可以对元素进行排序，不同步的。
            如何保证唯一性？
            参考的就是比较方法的返回值是否是0。是，就是重复元素，不存。
            排序方式：需要元素具备比较功能。所以元素需要实现Comparable接口。
            覆盖CompareTo()方法。

            需求中也有这样一种情况，元素具备的比较功能不是所需要的。而要按照
            自定义的方式进行排序。
            而且，存储到TreeSet中的元素也有可能不具备排序功能，该如何排序呢？
            这时，就只能使用第二种比较方式--是让集合具备比较功能，定义一个比较器。

            比较器：实现Comparator接口，覆盖compare()方法。
            将比较器对象作为参数传递给TreeSet集合的构造方法。

技巧：
jdk1.2以后出现的集合框架中的常用子类对象，存在规律——前缀名是数据结构，后缀名是框架体系。

ArrayList：数组结构。Array——查询快，List可重复，可增删改查。
LinkedList：链表结构。增删快，xxxFirst(), xxxLast(), xxx:get add remove
HashSet：哈希表，需覆盖hashCode(),equals()方法。不保证有序，不可以重复。
LinkedHashSet：链表+哈希表，可以实现有序。
TreeSet：二叉树结构，可以排序。一种是自然排序，一种是比较器排序。
